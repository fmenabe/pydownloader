#!/usr/bin/env python
# coding: utf-8

import os
import sys
import clg
import clg.conf as conf
import yaml
from lib.ui import UI
import lib.ui as ui
from lib.scheduler import Scheduler

import logging
logger = logging.getLogger('pydownloader')
logger.setLevel('DEBUG')
file_handler = logging.FileHandler('/var/log/pydownloader.log')
file_handler.setFormatter(logging.Formatter('%(asctime)s %(levelname)s: l%(lineno)d: %(message)s'))
file_handler.setLevel('DEBUG')
logger.addHandler(file_handler)

VERSION = 'pydownloader 1.1.0'
clg.TYPES['version'] = VERSION

def main():
    args = clg.init()
    conf.init(args)

    # Make sure destination directory exists.
    create_dir(args.dir)

    # Launch the process scheduler.
    scheduler = Scheduler(
        load_links(args.file) if args.file else [args.link], args.dir, args.parallel)
    scheduler.start()

    # Start UI.
    UI(scheduler, VERSION).run()

def load_links(path):
    if not os.path.exists(path):
        sys.exit("ERROR: links file '%s' does not exist" % path)
    with open(path) as fhandler:
        return [line for line in fhandler.read().splitlines() if line and line[0] != '#']

def create_dir(path):
    if not os.path.exists(path):
        try:
            os.makedirs(path)
        except OSError as err:
            sys.exit("ERROR: unable to create destination directory '%s': %s" % (path, err))

if __name__ == '__main__':
    main()
